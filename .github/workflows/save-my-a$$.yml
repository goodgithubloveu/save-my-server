name: save-my-a$$

on:
  workflow_dispatch:
  schedule:
    - cron: '*/30 * * * *'

jobs:
  check_website:
    runs-on: ubuntu-latest

    steps:
    - name: Validate WEBSITE environment variable
      run: |
        if [ -z "${{ secrets.WEBSITE }}" ]; then
          echo "Error: WEBSITE environment variable is not set."
          exit 1
        fi

    - name: Check if websites are online using curl
      id: check_websites
      run: |
        # Replace supported delimiters with newline and read each website
        websites=$(echo "${{ secrets.WEBSITE }}" | tr ',;' '\n')
        all_online=true

        for website in $websites; do
          RESPONSE=$(curl -k -s -o /dev/null -w "%{http_code}" "$website" || echo "failed")
          echo "Checking $website - HTTP response code: $RESPONSE"

          # If any website does not return 200 or 405, set all_online to false
          if [ "$RESPONSE" != "200" ] && [ "$RESPONSE" != "405" ]; then
            all_online=false
            break
          fi
        done

        # Set environment variable based on whether all websites are online
        if [ "$all_online" == "true" ]; then
          echo "All websites are online."
          echo "status=online" >> $GITHUB_ENV
        else
          echo "One or more websites are offline."
          echo "status=offline" >> $GITHUB_ENV
        fi

    - name: Validate SSH credentials
      if: env.status == 'offline'
      run: |
        if [ -z "${{ secrets.USERNAME }}" ] || [ -z "${{ secrets.PASSWORD }}" ] || [ -z "${{ secrets.SERVER }}" ]; then
          echo "Error: One or more SSH environment variables (USERNAME, PASSWORD, SERVER) are not set."
          exit 1
        fi

    - name: Install SSH Client
      if: env.status == 'offline'
      run: sudo apt-get update && sudo apt-get install -y openssh-client sshpass

    - name: Set SSH Port
      if: env.status == 'offline'
      run: |
        if [ -z "${{ secrets.PORT }}" ]; then
          echo "Using default SSH port 22"
          echo "SSH_PORT=22" >> $GITHUB_ENV
        else
          echo "Using custom SSH port ${{ secrets.PORT }}"
          echo "SSH_PORT=${{ secrets.PORT }}" >> $GITHUB_ENV
        fi

    - name: SSH into server and restart service
      if: env.status == 'offline'
      run: |
        sshpass -p '${{ secrets.PASSWORD }}' ssh -p $SSH_PORT -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.SERVER }} << 'EOF'
          if [ -z "${{ secrets.SCRIPT }}" ]; then
            echo "SCRIPT variable is not set. Skipping..."
          else
            echo "SCRIPT variable is set. Executing script..."
            ${{ secrets.SCRIPT }}
          fi
          exit
        EOF
      env:
        SCRIPT: ${{ secrets.SCRIPT }}
